---
- hosts: all
  become: true
  gather_facts: true  # Enable fact gathering for all hosts
  roles:
    - oci-swarm-node
  vars:
    ufw_tcp_ports:
      - 22  # SSH
      - 80  # Default HTTP
      - 443  # Default HTTPS
      - 3000  # Next.js Dokploy Server for initial setup
      - 996  # HTTPS connections for a Docker Registry
      - 7946  # Docker Swarm
      - 4789  # Docker Swarm
      - 2377  # Docker Swarm
    ufw_udp_ports:
      - 22  # SSH
      - 7946  # Docker Swarm
      - 4789  # Docker Swarm
      - 2377  # Docker Swarm
    ssh_authorized_key: "{{ lookup('file', '~/.ssh/oci_key.pub') }}"
    ssh_permit_root_login: "yes"

- hosts: manager
  become: true
  roles:
    - swarm_manager

- hosts: workers
  become: true
  roles:
    - swarm_worker

- name: Create Dockploy directories
  hosts: manager
  become: true
  tasks:
    - name: Create /etc/dokploy directory
      file:
        path: /etc/dokploy
        state: directory
        mode: '0777'

    - name: Create Traefik configuration directory
      file:
        path: /etc/dokploy/traefik
        state: directory
        mode: '0777'

    - name: Create Traefik dynamic configuration directory
      file:
        path: /etc/dokploy/traefik/dynamic
        state: directory
        mode: '0777'

- name: Create Docker Secrets from Control Environment
  hosts: manager
  become: true
  tasks:
    - name: Read secrets.yaml file
      include_vars:
        file: ../docker-stack/templates/dokploy/secrets.yaml
        name: secrets

    - name: Check PostgreSQL password secret
      command: docker secret inspect postgres_password
      ignore_errors: yes
      register: secret_check
      changed_when: false
      
    - name: Create PostgreSQL password secret
      shell: echo -n "{{ secrets.POSTGRES_PASSWORD }}" | docker secret create postgres_password -
      when: secret_check.rc != 0

- name: Deploy Application Stack
  hosts: manager
  become: true
  tasks:
    - name: Read secrets.yaml file
      include_vars:
        file: ../docker-stack/templates/dokploy/secrets.yaml
        name: secrets

    - name: Copy docker-compose file
      template:
        src: ../docker-stack/templates/dokploy/docker-compose.yaml
        dest: /home/ubuntu/docker-compose.yaml
      vars:
        postgres_password: "{{ secrets.POSTGRES_PASSWORD }}"

    - name: Deploy stack
      command: "docker stack deploy -c /home/ubuntu/docker-compose.yaml app"
